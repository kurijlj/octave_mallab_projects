% -----------------------------------------------------------------------------
%
% Function 'ItemListView':
%
% Use:
%       -- handles = ItemListView(hparent, name, uistyle, list)
%
% Description:
%          Panel containing list of items displayed in the table with options
%          to add and remove items.
%
% -----------------------------------------------------------------------------
function handles = ItemListView(hparent, name, uistyle, list)
    fname = 'ItemListView';
    use_case_a = ' -- handles = ItemListView(hparent, name, uistyle, list)';

    % Validate input arguments ------------------------------------------------
    if(~ishghandle(hparent))
        error( ...
            '%s: hparent must be handle to a graphics object', ...
            fname
            );

    endif;

    if(~ischar(name))  % name can be an empty string
        error( ...
            '%s: name must be a character array', ...
            fname
            );

    endif;

    if(~isa(uistyle, 'AppUiStyle'))
        error( ...
            '%s: uistyle must be an instance of the "AppUiStyle" class', ...
            fname ...
            );

    endif;

    if(~isa(list, 'ItemList'))
        error( ...
            '%s: list must be an instance of the "ItemList" class', ...
            fname ...
            );

    endif;

    % Create the GUI elements -------------------------------------------------
    handles = struct();

    % Create panel containig the view's elements
    handles.main_panel = uipanel( ...
        'parent', hparent, ...
        'title', name, ...
        'position', [0.00, 0.00, 1.00, 1.00] ...
        );

    % Create view's elements

    % Calculate positions of the view's elements
    position = itemListViewElementsPosition(handles.main_panel, uistyle);

    % Table: tbl_items
    handles.tbl_items = uitable( ...
        'parent', handles.main_panel, ...
        'data', list.cellarray(), ...
        'tooltipstring', 'Select row to select item', ...
        'columnname', {'Name', 'Value'}, ...
        'units', 'normalized', ...
        'position', position(1, :) ...
        );

    % Context menu
    cm = uicontextmenu( ...
        'parent', ancestor(hparent, 'figure') ...
        );

    % Menu option: mnu_add
    handles.mnu_add = uimenu( ...
        'parent', cm, ...
        'label', 'Add Item ...', ...
        'enable', 'on' ...
        );

    % Menu option: mnu_remove
     handles.mnu_remove = uimenu( ...
        'parent', cm, ...
        'label', 'Remove Selected Item ...', ...
        'enable', 'off' ...
        );

    % Assign context menu to the table
    set(handles.tbl_items, 'uicontextmenu', cm);

endfunction;
